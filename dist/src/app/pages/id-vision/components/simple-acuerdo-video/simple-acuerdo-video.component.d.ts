import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, Renderer2 } from '@angular/core';
import { AlertController, ModalController, Platform } from '@ionic/angular';
import { DomSanitizer } from '@angular/platform-browser';
import { ModalVideoSelfieServices } from '../../services/modal-services/modal-video-selfie-services';
import { ModalDpiServices } from '../../services/modal-services/modal-dpi-services';
import * as i0 from "@angular/core";
export declare class SimpleAcuerdoVideoComponent implements AfterViewInit, OnDestroy {
    private platform;
    private modalController;
    private sanitizer;
    private renderer;
    private alertController;
    private changeDetector;
    private modalVideoSelfieServices;
    private modalDpiServices;
    videoElement: ElementRef<HTMLVideoElement>;
    progressRing: ElementRef<HTMLElement>;
    text1: string;
    text2: string;
    backFunction: (filePath: File) => Promise<void>;
    closeRequested: EventEmitter<void>;
    capturedVideoUrl: any;
    capVideo?: File;
    stream: MediaStream | null;
    private isAndroid;
    private isIOS;
    private scanTimeout;
    isRecording: boolean;
    mediaRecorder: MediaRecorder | null;
    recordedChunks: Blob[];
    countdown: number;
    private recordingTimer;
    private minRecordingTime;
    private maxRecordingTime;
    timeRemaining: number;
    canStopRecording: boolean;
    isLoading: boolean;
    private defaultBrightness;
    constructor(platform: Platform, modalController: ModalController, sanitizer: DomSanitizer, renderer: Renderer2, alertController: AlertController, changeDetector: ChangeDetectorRef, modalVideoSelfieServices: ModalVideoSelfieServices, modalDpiServices: ModalDpiServices);
    ngAfterViewInit(): Promise<void>;
    ngOnDestroy(): Promise<void>;
    waitForCameraReady(): Promise<void>;
    requestPermissions(): Promise<void>;
    initCamera(): Promise<void>;
    startRecording(): Promise<void>;
    blobToFile(blob: Blob, fileName: string): File;
    recordVideo(): void;
    startVideoRecord(): Promise<void>;
    updateTimeRemaining(): void;
    stopRecording(): Promise<void>;
    closeOverlayVideo(): Promise<void>;
    stopCamera(): void;
    closeRequestedFunction(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SimpleAcuerdoVideoComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SimpleAcuerdoVideoComponent, "app-simple-acuerdo-video", never, { "text1": { "alias": "text1"; "required": false; }; "text2": { "alias": "text2"; "required": false; }; "backFunction": { "alias": "backFunction"; "required": false; }; }, { "closeRequested": "closeRequested"; }, never, never, false, never>;
}
//# sourceMappingURL=simple-acuerdo-video.component.d.ts.map